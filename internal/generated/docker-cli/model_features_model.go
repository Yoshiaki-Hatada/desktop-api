/*
 * Docker Desktop CLI API
 *
 * This is the Docker Desktop CLI API
 *
 * API version: 0.1.0
 * Contact: support@docker.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dockercliapi

import (
	"encoding/json"
)

// FeaturesModel struct for FeaturesModel
type FeaturesModel struct {
	Prouser *FeaturesModelProuser `json:"prouser,omitempty"`
}

// NewFeaturesModel instantiates a new FeaturesModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeaturesModel() *FeaturesModel {
	this := FeaturesModel{}
	return &this
}

// NewFeaturesModelWithDefaults instantiates a new FeaturesModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeaturesModelWithDefaults() *FeaturesModel {
	this := FeaturesModel{}
	return &this
}

// GetProuser returns the Prouser field value if set, zero value otherwise.
func (o *FeaturesModel) GetProuser() FeaturesModelProuser {
	if o == nil || o.Prouser == nil {
		var ret FeaturesModelProuser
		return ret
	}
	return *o.Prouser
}

// GetProuserOk returns a tuple with the Prouser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeaturesModel) GetProuserOk() (*FeaturesModelProuser, bool) {
	if o == nil || o.Prouser == nil {
		return nil, false
	}
	return o.Prouser, true
}

// HasProuser returns a boolean if a field has been set.
func (o *FeaturesModel) HasProuser() bool {
	if o != nil && o.Prouser != nil {
		return true
	}

	return false
}

// SetProuser gets a reference to the given FeaturesModelProuser and assigns it to the Prouser field.
func (o *FeaturesModel) SetProuser(v FeaturesModelProuser) {
	o.Prouser = &v
}

func (o FeaturesModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Prouser != nil {
		toSerialize["prouser"] = o.Prouser
	}
	return json.Marshal(toSerialize)
}

type NullableFeaturesModel struct {
	value *FeaturesModel
	isSet bool
}

func (v NullableFeaturesModel) Get() *FeaturesModel {
	return v.value
}

func (v *NullableFeaturesModel) Set(val *FeaturesModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFeaturesModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFeaturesModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeaturesModel(val *FeaturesModel) *NullableFeaturesModel {
	return &NullableFeaturesModel{value: val, isSet: true}
}

func (v NullableFeaturesModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeaturesModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
